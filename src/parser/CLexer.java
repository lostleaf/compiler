// Generated from C.g4 by ANTLR 4.0

package parser;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class CLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__57=1, T__56=2, T__55=3, T__54=4, T__53=5, T__52=6, T__51=7, T__50=8, 
		T__49=9, T__48=10, T__47=11, T__46=12, T__45=13, T__44=14, T__43=15, T__42=16, 
		T__41=17, T__40=18, T__39=19, T__38=20, T__37=21, T__36=22, T__35=23, 
		T__34=24, T__33=25, T__32=26, T__31=27, T__30=28, T__29=29, T__28=30, 
		T__27=31, T__26=32, T__25=33, T__24=34, T__23=35, T__22=36, T__21=37, 
		T__20=38, T__19=39, T__18=40, T__17=41, T__16=42, T__15=43, T__14=44, 
		T__13=45, T__12=46, T__11=47, T__10=48, T__9=49, T__8=50, T__7=51, T__6=52, 
		T__5=53, T__4=54, T__3=55, T__2=56, T__1=57, T__0=58, Whitespace=59, Multi_comment=60, 
		Single_comment=61, Hex=62, Dec=63, Oct=64, Character=65, String=66, Identifier=67;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'&'", "'['", "'*'", "'<'", "'--'", "'continue'", "'!='", "'<='", "'<<'", 
		"'}'", "'char'", "'%'", "'->'", "'*='", "'union'", "')'", "'='", "'|='", 
		"'|'", "'!'", "'sizeof'", "'<<='", "']'", "'-='", "','", "'while'", "'-'", 
		"'('", "'&='", "'if'", "'int'", "'void'", "'>>='", "'{'", "'...'", "'break'", 
		"'+='", "'^='", "'else'", "'struct'", "'++'", "'>>'", "'^'", "'.'", "'+'", 
		"'for'", "'typedef'", "'return'", "';'", "'&&'", "'||'", "'>'", "'%='", 
		"'/='", "'=='", "'/'", "'~'", "'>='", "Whitespace", "Multi_comment", "Single_comment", 
		"Hex", "Dec", "Oct", "Character", "String", "Identifier"
	};
	public static final String[] ruleNames = {
		"T__57", "T__56", "T__55", "T__54", "T__53", "T__52", "T__51", "T__50", 
		"T__49", "T__48", "T__47", "T__46", "T__45", "T__44", "T__43", "T__42", 
		"T__41", "T__40", "T__39", "T__38", "T__37", "T__36", "T__35", "T__34", 
		"T__33", "T__32", "T__31", "T__30", "T__29", "T__28", "T__27", "T__26", 
		"T__25", "T__24", "T__23", "T__22", "T__21", "T__20", "T__19", "T__18", 
		"T__17", "T__16", "T__15", "T__14", "T__13", "T__12", "T__11", "T__10", 
		"T__9", "T__8", "T__7", "T__6", "T__5", "T__4", "T__3", "T__2", "T__1", 
		"T__0", "Whitespace", "EOL", "Multi_comment", "Single_comment", "Hex", 
		"Dec", "Oct", "Digit", "HexDigit", "Letter", "Character", "String", "Identifier"
	};


	public CLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "C.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 58: Whitespace_action((RuleContext)_localctx, actionIndex); break;

		case 60: Multi_comment_action((RuleContext)_localctx, actionIndex); break;

		case 61: Single_comment_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void Multi_comment_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 1: _channel = HIDDEN;  break;
		}
	}
	private void Single_comment_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 2: _channel = HIDDEN;  break;
		}
	}
	private void Whitespace_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: _channel = HIDDEN;  break;
		}
	}

	public static final String _serializedATN =
		"\2\4E\u01b4\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t"+
		"\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20"+
		"\t\20\4\21\t\21\4\22\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27"+
		"\t\27\4\30\t\30\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36"+
		"\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4"+
		"(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62"+
		"\t\62\4\63\t\63\4\64\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4"+
		":\t:\4;\t;\4<\t<\4=\t=\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\t"+
		"E\4F\tF\4G\tG\4H\tH\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\6\3\7\3"+
		"\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\t\3\t\3\t\3\n\3\n\3\n\3\13"+
		"\3\13\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\16\3\16\3\16\3\17\3\17\3\17\3\20\3"+
		"\20\3\20\3\20\3\20\3\20\3\21\3\21\3\22\3\22\3\23\3\23\3\23\3\24\3\24\3"+
		"\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\30\3"+
		"\30\3\31\3\31\3\31\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3"+
		"\35\3\35\3\36\3\36\3\36\3\37\3\37\3\37\3 \3 \3 \3 \3!\3!\3!\3!\3!\3\""+
		"\3\"\3\"\3\"\3#\3#\3$\3$\3$\3$\3%\3%\3%\3%\3%\3%\3&\3&\3&\3\'\3\'\3\'"+
		"\3(\3(\3(\3(\3(\3)\3)\3)\3)\3)\3)\3)\3*\3*\3*\3+\3+\3+\3,\3,\3-\3-\3."+
		"\3.\3/\3/\3/\3/\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\61\3\61\3\61"+
		"\3\61\3\61\3\61\3\61\3\62\3\62\3\63\3\63\3\63\3\64\3\64\3\64\3\65\3\65"+
		"\3\66\3\66\3\66\3\67\3\67\3\67\38\38\38\39\39\3:\3:\3;\3;\3;\3<\6<\u0156"+
		"\n<\r<\16<\u0157\3<\3<\3=\3=\3=\5=\u015f\n=\3>\3>\3>\3>\7>\u0165\n>\f"+
		">\16>\u0168\13>\3>\3>\3>\3>\3>\3?\3?\3?\3?\7?\u0173\n?\f?\16?\u0176\13"+
		"?\3?\3?\3?\3?\3@\3@\3@\6@\u017f\n@\r@\16@\u0180\3A\3A\3A\6A\u0186\nA\r"+
		"A\16A\u0187\5A\u018a\nA\3B\3B\6B\u018e\nB\rB\16B\u018f\3C\3C\3D\3D\5D"+
		"\u0196\nD\3E\3E\3F\3F\3F\3F\5F\u019e\nF\3F\3F\3G\3G\3G\3G\7G\u01a6\nG"+
		"\fG\16G\u01a9\13G\3G\3G\3H\3H\3H\7H\u01b0\nH\fH\16H\u01b3\13H\3\u0166"+
		"I\3\3\1\5\4\1\7\5\1\t\6\1\13\7\1\r\b\1\17\t\1\21\n\1\23\13\1\25\f\1\27"+
		"\r\1\31\16\1\33\17\1\35\20\1\37\21\1!\22\1#\23\1%\24\1\'\25\1)\26\1+\27"+
		"\1-\30\1/\31\1\61\32\1\63\33\1\65\34\1\67\35\19\36\1;\37\1= \1?!\1A\""+
		"\1C#\1E$\1G%\1I&\1K\'\1M(\1O)\1Q*\1S+\1U,\1W-\1Y.\1[/\1]\60\1_\61\1a\62"+
		"\1c\63\1e\64\1g\65\1i\66\1k\67\1m8\1o9\1q:\1s;\1u<\1w=\2y\2\1{>\3}?\4"+
		"\177@\1\u0081A\1\u0083B\1\u0085\2\1\u0087\2\1\u0089\2\1\u008bC\1\u008d"+
		"D\1\u008fE\1\3\2\f\5\13\f\17\17\"\"\4\f\f\17\17\4\f\f\17\17\4ZZzz\4CH"+
		"ch\6&&C\\aac|\n$$))^^ddhhppttvv\4))^^\n$$))^^ddhhppttvv\4$$^^\u01bd\2"+
		"\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2"+
		"\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2"+
		"\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2"+
		"\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2"+
		"\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2"+
		"\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2"+
		"\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U"+
		"\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2"+
		"\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2"+
		"\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2{\3\2\2\2\2}"+
		"\3\2\2\2\2\177\3\2\2\2\2\u0081\3\2\2\2\2\u0083\3\2\2\2\2\u008b\3\2\2\2"+
		"\2\u008d\3\2\2\2\2\u008f\3\2\2\2\3\u0091\3\2\2\2\5\u0093\3\2\2\2\7\u0095"+
		"\3\2\2\2\t\u0097\3\2\2\2\13\u0099\3\2\2\2\r\u009c\3\2\2\2\17\u00a5\3\2"+
		"\2\2\21\u00a8\3\2\2\2\23\u00ab\3\2\2\2\25\u00ae\3\2\2\2\27\u00b0\3\2\2"+
		"\2\31\u00b5\3\2\2\2\33\u00b7\3\2\2\2\35\u00ba\3\2\2\2\37\u00bd\3\2\2\2"+
		"!\u00c3\3\2\2\2#\u00c5\3\2\2\2%\u00c7\3\2\2\2\'\u00ca\3\2\2\2)\u00cc\3"+
		"\2\2\2+\u00ce\3\2\2\2-\u00d5\3\2\2\2/\u00d9\3\2\2\2\61\u00db\3\2\2\2\63"+
		"\u00de\3\2\2\2\65\u00e0\3\2\2\2\67\u00e6\3\2\2\29\u00e8\3\2\2\2;\u00ea"+
		"\3\2\2\2=\u00ed\3\2\2\2?\u00f0\3\2\2\2A\u00f4\3\2\2\2C\u00f9\3\2\2\2E"+
		"\u00fd\3\2\2\2G\u00ff\3\2\2\2I\u0103\3\2\2\2K\u0109\3\2\2\2M\u010c\3\2"+
		"\2\2O\u010f\3\2\2\2Q\u0114\3\2\2\2S\u011b\3\2\2\2U\u011e\3\2\2\2W\u0121"+
		"\3\2\2\2Y\u0123\3\2\2\2[\u0125\3\2\2\2]\u0127\3\2\2\2_\u012b\3\2\2\2a"+
		"\u0133\3\2\2\2c\u013a\3\2\2\2e\u013c\3\2\2\2g\u013f\3\2\2\2i\u0142\3\2"+
		"\2\2k\u0144\3\2\2\2m\u0147\3\2\2\2o\u014a\3\2\2\2q\u014d\3\2\2\2s\u014f"+
		"\3\2\2\2u\u0151\3\2\2\2w\u0155\3\2\2\2y\u015e\3\2\2\2{\u0160\3\2\2\2}"+
		"\u016e\3\2\2\2\177\u017b\3\2\2\2\u0081\u0189\3\2\2\2\u0083\u018b\3\2\2"+
		"\2\u0085\u0191\3\2\2\2\u0087\u0195\3\2\2\2\u0089\u0197\3\2\2\2\u008b\u0199"+
		"\3\2\2\2\u008d\u01a1\3\2\2\2\u008f\u01ac\3\2\2\2\u0091\u0092\7(\2\2\u0092"+
		"\4\3\2\2\2\u0093\u0094\7]\2\2\u0094\6\3\2\2\2\u0095\u0096\7,\2\2\u0096"+
		"\b\3\2\2\2\u0097\u0098\7>\2\2\u0098\n\3\2\2\2\u0099\u009a\7/\2\2\u009a"+
		"\u009b\7/\2\2\u009b\f\3\2\2\2\u009c\u009d\7e\2\2\u009d\u009e\7q\2\2\u009e"+
		"\u009f\7p\2\2\u009f\u00a0\7v\2\2\u00a0\u00a1\7k\2\2\u00a1\u00a2\7p\2\2"+
		"\u00a2\u00a3\7w\2\2\u00a3\u00a4\7g\2\2\u00a4\16\3\2\2\2\u00a5\u00a6\7"+
		"#\2\2\u00a6\u00a7\7?\2\2\u00a7\20\3\2\2\2\u00a8\u00a9\7>\2\2\u00a9\u00aa"+
		"\7?\2\2\u00aa\22\3\2\2\2\u00ab\u00ac\7>\2\2\u00ac\u00ad\7>\2\2\u00ad\24"+
		"\3\2\2\2\u00ae\u00af\7\177\2\2\u00af\26\3\2\2\2\u00b0\u00b1\7e\2\2\u00b1"+
		"\u00b2\7j\2\2\u00b2\u00b3\7c\2\2\u00b3\u00b4\7t\2\2\u00b4\30\3\2\2\2\u00b5"+
		"\u00b6\7\'\2\2\u00b6\32\3\2\2\2\u00b7\u00b8\7/\2\2\u00b8\u00b9\7@\2\2"+
		"\u00b9\34\3\2\2\2\u00ba\u00bb\7,\2\2\u00bb\u00bc\7?\2\2\u00bc\36\3\2\2"+
		"\2\u00bd\u00be\7w\2\2\u00be\u00bf\7p\2\2\u00bf\u00c0\7k\2\2\u00c0\u00c1"+
		"\7q\2\2\u00c1\u00c2\7p\2\2\u00c2 \3\2\2\2\u00c3\u00c4\7+\2\2\u00c4\"\3"+
		"\2\2\2\u00c5\u00c6\7?\2\2\u00c6$\3\2\2\2\u00c7\u00c8\7~\2\2\u00c8\u00c9"+
		"\7?\2\2\u00c9&\3\2\2\2\u00ca\u00cb\7~\2\2\u00cb(\3\2\2\2\u00cc\u00cd\7"+
		"#\2\2\u00cd*\3\2\2\2\u00ce\u00cf\7u\2\2\u00cf\u00d0\7k\2\2\u00d0\u00d1"+
		"\7|\2\2\u00d1\u00d2\7g\2\2\u00d2\u00d3\7q\2\2\u00d3\u00d4\7h\2\2\u00d4"+
		",\3\2\2\2\u00d5\u00d6\7>\2\2\u00d6\u00d7\7>\2\2\u00d7\u00d8\7?\2\2\u00d8"+
		".\3\2\2\2\u00d9\u00da\7_\2\2\u00da\60\3\2\2\2\u00db\u00dc\7/\2\2\u00dc"+
		"\u00dd\7?\2\2\u00dd\62\3\2\2\2\u00de\u00df\7.\2\2\u00df\64\3\2\2\2\u00e0"+
		"\u00e1\7y\2\2\u00e1\u00e2\7j\2\2\u00e2\u00e3\7k\2\2\u00e3\u00e4\7n\2\2"+
		"\u00e4\u00e5\7g\2\2\u00e5\66\3\2\2\2\u00e6\u00e7\7/\2\2\u00e78\3\2\2\2"+
		"\u00e8\u00e9\7*\2\2\u00e9:\3\2\2\2\u00ea\u00eb\7(\2\2\u00eb\u00ec\7?\2"+
		"\2\u00ec<\3\2\2\2\u00ed\u00ee\7k\2\2\u00ee\u00ef\7h\2\2\u00ef>\3\2\2\2"+
		"\u00f0\u00f1\7k\2\2\u00f1\u00f2\7p\2\2\u00f2\u00f3\7v\2\2\u00f3@\3\2\2"+
		"\2\u00f4\u00f5\7x\2\2\u00f5\u00f6\7q\2\2\u00f6\u00f7\7k\2\2\u00f7\u00f8"+
		"\7f\2\2\u00f8B\3\2\2\2\u00f9\u00fa\7@\2\2\u00fa\u00fb\7@\2\2\u00fb\u00fc"+
		"\7?\2\2\u00fcD\3\2\2\2\u00fd\u00fe\7}\2\2\u00feF\3\2\2\2\u00ff\u0100\7"+
		"\60\2\2\u0100\u0101\7\60\2\2\u0101\u0102\7\60\2\2\u0102H\3\2\2\2\u0103"+
		"\u0104\7d\2\2\u0104\u0105\7t\2\2\u0105\u0106\7g\2\2\u0106\u0107\7c\2\2"+
		"\u0107\u0108\7m\2\2\u0108J\3\2\2\2\u0109\u010a\7-\2\2\u010a\u010b\7?\2"+
		"\2\u010bL\3\2\2\2\u010c\u010d\7`\2\2\u010d\u010e\7?\2\2\u010eN\3\2\2\2"+
		"\u010f\u0110\7g\2\2\u0110\u0111\7n\2\2\u0111\u0112\7u\2\2\u0112\u0113"+
		"\7g\2\2\u0113P\3\2\2\2\u0114\u0115\7u\2\2\u0115\u0116\7v\2\2\u0116\u0117"+
		"\7t\2\2\u0117\u0118\7w\2\2\u0118\u0119\7e\2\2\u0119\u011a\7v\2\2\u011a"+
		"R\3\2\2\2\u011b\u011c\7-\2\2\u011c\u011d\7-\2\2\u011dT\3\2\2\2\u011e\u011f"+
		"\7@\2\2\u011f\u0120\7@\2\2\u0120V\3\2\2\2\u0121\u0122\7`\2\2\u0122X\3"+
		"\2\2\2\u0123\u0124\7\60\2\2\u0124Z\3\2\2\2\u0125\u0126\7-\2\2\u0126\\"+
		"\3\2\2\2\u0127\u0128\7h\2\2\u0128\u0129\7q\2\2\u0129\u012a\7t\2\2\u012a"+
		"^\3\2\2\2\u012b\u012c\7v\2\2\u012c\u012d\7{\2\2\u012d\u012e\7r\2\2\u012e"+
		"\u012f\7g\2\2\u012f\u0130\7f\2\2\u0130\u0131\7g\2\2\u0131\u0132\7h\2\2"+
		"\u0132`\3\2\2\2\u0133\u0134\7t\2\2\u0134\u0135\7g\2\2\u0135\u0136\7v\2"+
		"\2\u0136\u0137\7w\2\2\u0137\u0138\7t\2\2\u0138\u0139\7p\2\2\u0139b\3\2"+
		"\2\2\u013a\u013b\7=\2\2\u013bd\3\2\2\2\u013c\u013d\7(\2\2\u013d\u013e"+
		"\7(\2\2\u013ef\3\2\2\2\u013f\u0140\7~\2\2\u0140\u0141\7~\2\2\u0141h\3"+
		"\2\2\2\u0142\u0143\7@\2\2\u0143j\3\2\2\2\u0144\u0145\7\'\2\2\u0145\u0146"+
		"\7?\2\2\u0146l\3\2\2\2\u0147\u0148\7\61\2\2\u0148\u0149\7?\2\2\u0149n"+
		"\3\2\2\2\u014a\u014b\7?\2\2\u014b\u014c\7?\2\2\u014cp\3\2\2\2\u014d\u014e"+
		"\7\61\2\2\u014er\3\2\2\2\u014f\u0150\7\u0080\2\2\u0150t\3\2\2\2\u0151"+
		"\u0152\7@\2\2\u0152\u0153\7?\2\2\u0153v\3\2\2\2\u0154\u0156\t\2\2\2\u0155"+
		"\u0154\3\2\2\2\u0156\u0157\3\2\2\2\u0157\u0155\3\2\2\2\u0157\u0158\3\2"+
		"\2\2\u0158\u0159\3\2\2\2\u0159\u015a\b<\2\2\u015ax\3\2\2\2\u015b\u015f"+
		"\t\3\2\2\u015c\u015d\7\17\2\2\u015d\u015f\7\f\2\2\u015e\u015b\3\2\2\2"+
		"\u015e\u015c\3\2\2\2\u015fz\3\2\2\2\u0160\u0161\7\61\2\2\u0161\u0162\7"+
		",\2\2\u0162\u0166\3\2\2\2\u0163\u0165\13\2\2\2\u0164\u0163\3\2\2\2\u0165"+
		"\u0168\3\2\2\2\u0166\u0167\3\2\2\2\u0166\u0164\3\2\2\2\u0167\u0169\3\2"+
		"\2\2\u0168\u0166\3\2\2\2\u0169\u016a\7,\2\2\u016a\u016b\7\61\2\2\u016b"+
		"\u016c\3\2\2\2\u016c\u016d\b>\3\2\u016d|\3\2\2\2\u016e\u016f\7\61\2\2"+
		"\u016f\u0170\7\61\2\2\u0170\u0174\3\2\2\2\u0171\u0173\n\4\2\2\u0172\u0171"+
		"\3\2\2\2\u0173\u0176\3\2\2\2\u0174\u0172\3\2\2\2\u0174\u0175\3\2\2\2\u0175"+
		"\u0177\3\2\2\2\u0176\u0174\3\2\2\2\u0177\u0178\5y=\2\u0178\u0179\3\2\2"+
		"\2\u0179\u017a\b?\4\2\u017a~\3\2\2\2\u017b\u017c\7\62\2\2\u017c\u017e"+
		"\t\5\2\2\u017d\u017f\5\u0087D\2\u017e\u017d\3\2\2\2\u017f\u0180\3\2\2"+
		"\2\u0180\u017e\3\2\2\2\u0180\u0181\3\2\2\2\u0181\u0080\3\2\2\2\u0182\u018a"+
		"\7\62\2\2\u0183\u0185\4\63;\2\u0184\u0186\5\u0085C\2\u0185\u0184\3\2\2"+
		"\2\u0186\u0187\3\2\2\2\u0187\u0185\3\2\2\2\u0187\u0188\3\2\2\2\u0188\u018a"+
		"\3\2\2\2\u0189\u0182\3\2\2\2\u0189\u0183\3\2\2\2\u018a\u0082\3\2\2\2\u018b"+
		"\u018d\7\62\2\2\u018c\u018e\4\629\2\u018d\u018c\3\2\2\2\u018e\u018f\3"+
		"\2\2\2\u018f\u018d\3\2\2\2\u018f\u0190\3\2\2\2\u0190\u0084\3\2\2\2\u0191"+
		"\u0192\4\62;\2\u0192\u0086\3\2\2\2\u0193\u0196\5\u0085C\2\u0194\u0196"+
		"\t\6\2\2\u0195\u0193\3\2\2\2\u0195\u0194\3\2\2\2\u0196\u0088\3\2\2\2\u0197"+
		"\u0198\t\7\2\2\u0198\u008a\3\2\2\2\u0199\u019d\7)\2\2\u019a\u019b\7^\2"+
		"\2\u019b\u019e\t\b\2\2\u019c\u019e\n\t\2\2\u019d\u019a\3\2\2\2\u019d\u019c"+
		"\3\2\2\2\u019e\u019f\3\2\2\2\u019f\u01a0\7)\2\2\u01a0\u008c\3\2\2\2\u01a1"+
		"\u01a7\7$\2\2\u01a2\u01a3\7^\2\2\u01a3\u01a6\t\n\2\2\u01a4\u01a6\n\13"+
		"\2\2\u01a5\u01a2\3\2\2\2\u01a5\u01a4\3\2\2\2\u01a6\u01a9\3\2\2\2\u01a7"+
		"\u01a5\3\2\2\2\u01a7\u01a8\3\2\2\2\u01a8\u01aa\3\2\2\2\u01a9\u01a7\3\2"+
		"\2\2\u01aa\u01ab\7$\2\2\u01ab\u008e\3\2\2\2\u01ac\u01b1\5\u0089E\2\u01ad"+
		"\u01b0\5\u0089E\2\u01ae\u01b0\5\u0085C\2\u01af\u01ad\3\2\2\2\u01af\u01ae"+
		"\3\2\2\2\u01b0\u01b3\3\2\2\2\u01b1\u01af\3\2\2\2\u01b1\u01b2\3\2\2\2\u01b2"+
		"\u0090\3\2\2\2\u01b3\u01b1\3\2\2\2\21\2\u0157\u015e\u0166\u0174\u0180"+
		"\u0187\u0189\u018f\u0195\u019d\u01a5\u01a7\u01af\u01b1";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
	}
}